{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\yania\\\\OneDrive\\\\Desktop\\\\Septimo Semestre\\\\Ingeniria Web\\\\react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\yania\\\\OneDrive\\\\Desktop\\\\Septimo Semestre\\\\Ingeniria Web\\\\react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\yania\\\\OneDrive\\\\Desktop\\\\Septimo Semestre\\\\Ingeniria Web\\\\react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\yania\\\\OneDrive\\\\Desktop\\\\Septimo Semestre\\\\Ingeniria Web\\\\react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\yania\\\\OneDrive\\\\Desktop\\\\Septimo Semestre\\\\Ingeniria Web\\\\react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\yania\\\\OneDrive\\\\Desktop\\\\Septimo Semestre\\\\Ingeniria Web\\\\react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\yania\\\\OneDrive\\\\Desktop\\\\Septimo Semestre\\\\Ingeniria Web\\\\react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\yania\\\\OneDrive\\\\Desktop\\\\Septimo Semestre\\\\Ingeniria Web\\\\react-app\\\\src\\\\MemeGenerator.js\";\nimport React from 'react';\nimport './style.css';\nimport * as htmlToImage from 'html-to-image';\nimport FileSaver from 'file-saver';\n\nvar MemeGenerator = /*#__PURE__*/function (_React$Component) {\n  _inherits(MemeGenerator, _React$Component);\n\n  function MemeGenerator() {\n    var _this;\n\n    _classCallCheck(this, MemeGenerator);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MemeGenerator).call(this));\n    _this.state = {\n      topText: \"\",\n      bottomText: \"\",\n      randomImage: \"http://i.imgflip.com/1bij.jpg\",\n      allMemeImages: []\n    };\n    _this.changeHandler = _this.changeHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.submitHandler = _this.submitHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(MemeGenerator, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(\"https://api.imgflip.com/get_memes\").then(function (response) {\n        return response.json();\n      }).then(function (response) {\n        var memes = response.data.memes;\n\n        _this2.setState({\n          allMemeImages: memes\n        });\n      });\n    }\n  }, {\n    key: \"changeHandler\",\n    value: function changeHandler(event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n      this.setState(_defineProperty({}, name, value));\n    }\n  }, {\n    key: \"submitHandler\",\n    value: function submitHandler(event) {\n      event.preventDefault();\n      var randNum = Math.floor(Math.random() * this.state.allMemeImages.length);\n      var randMemeImg = this.state.allMemeImages[randNum].url;\n      this.setState({\n        randomImage: randMemeImg\n      });\n    }\n  }, {\n    key: \"downloadMeme\",\n    value: function downloadMeme() {\n      htmlToImage.toBlob(document.getElementById('memeImg')).then(function (blob) {\n        FileSaver.saveAs(blob, 'memeImg.png');\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        className: \"meme-form\",\n        onSubmit: this.submitHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        name: \"topText\",\n        placeholder: \"Top Text\",\n        value: this.state.topText,\n        onChange: this.changeHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        name: \"bottomText\",\n        placeholder: \"Bottom Text\",\n        value: this.state.bottomText,\n        onChange: this.changeHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }\n      }, \"Generate\")), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"downloadSection\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        id: \"btnDownloadMeme\",\n        onClick: this.downloadMeme,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }\n      }, \"Download Meme\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"meme\",\n        id: \"memeImg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: this.state.randomImage,\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"h2\", {\n        className: \"top\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }\n      }, this.state.topText), /*#__PURE__*/React.createElement(\"h2\", {\n        className: \"bottom\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }\n      }, this.state.bottomText)));\n    }\n  }]);\n\n  return MemeGenerator;\n}(React.Component);\n\nexport default MemeGenerator;","map":{"version":3,"names":["React","htmlToImage","FileSaver","MemeGenerator","state","topText","bottomText","randomImage","allMemeImages","changeHandler","bind","submitHandler","fetch","then","response","json","memes","data","setState","event","target","name","value","preventDefault","randNum","Math","floor","random","length","randMemeImg","url","toBlob","document","getElementById","blob","saveAs","downloadMeme","Component"],"sources":["C:/Users/yania/OneDrive/Desktop/Septimo Semestre/Ingeniria Web/react-app/src/MemeGenerator.js"],"sourcesContent":["import React from 'react';\r\nimport './style.css';\r\nimport * as htmlToImage from 'html-to-image';\r\nimport FileSaver from 'file-saver';\r\n\r\nclass MemeGenerator extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            topText : \"\",\r\n            bottomText : \"\",\r\n            randomImage : \"http://i.imgflip.com/1bij.jpg\",\r\n            allMemeImages : []\r\n        }\r\n        this.changeHandler = this.changeHandler.bind(this);\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"https://api.imgflip.com/get_memes\")\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            const {memes} = response.data\r\n            this.setState({\r\n                allMemeImages: memes\r\n            })\r\n        });\r\n    }\r\n\r\n    changeHandler(event) {\r\n        const {name, value} = event.target;\r\n        this.setState({\r\n            [name] : value\r\n        })\r\n    }\r\n    submitHandler(event) {\r\n        event.preventDefault();\r\n        const randNum = Math.floor(Math.random() * this.state.allMemeImages.length);\r\n        const randMemeImg = this.state.allMemeImages[randNum].url;\r\n        this.setState({ randomImage: randMemeImg });\r\n    }\r\n    downloadMeme() {\r\n        htmlToImage.toBlob(document.getElementById('memeImg'))\r\n        .then(function (blob) {\r\n            FileSaver.saveAs(blob, 'memeImg.png');\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form className=\"meme-form\" onSubmit={this.submitHandler}>\r\n                    <input type=\"text\" name=\"topText\" placeholder=\"Top Text\" value={this.state.topText} onChange={this.changeHandler} />\r\n                    <input type=\"text\" name=\"bottomText\" placeholder=\"Bottom Text\" value={this.state.bottomText} onChange={this.changeHandler} />   \r\n                    <button>Generate</button>\r\n                </form>\r\n                <div id=\"downloadSection\">\r\n                    <button id=\"btnDownloadMeme\" onClick={this.downloadMeme}>Download Meme</button>\r\n                </div>\r\n                <div className=\"meme\" id=\"memeImg\">\r\n                    <img src={this.state.randomImage} alt=\"\" />\r\n                    <h2 className=\"top\">{this.state.topText}</h2>\r\n                    <h2 className=\"bottom\">{this.state.bottomText}</h2>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default MemeGenerator;"],"mappings":"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"},"metadata":{},"sourceType":"module"}