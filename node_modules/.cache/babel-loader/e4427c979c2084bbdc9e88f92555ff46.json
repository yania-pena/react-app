{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yania\\\\OneDrive\\\\Desktop\\\\Septimo Semestre\\\\Ingeniria Web\\\\react-app\\\\src\\\\MemeGenerator.js\";\nimport React from 'react';\nimport './style.css';\nimport * as htmlToImage from 'html-to-image';\nimport FileSaver from 'file-saver';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MemeGenerator extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      topText: \"\",\n      bottomText: \"\",\n      randomImage: \"https://i.imgflip.com/1bij.jpg\",\n      allMemeImages: []\n    };\n    this.changeHandler = this.changeHandler.bind(this);\n    this.submitHandler = this.submitHandler.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.imgflip.com/get_memes\").then(response => response.json()).then(response => {\n      const {\n        memes\n      } = response.data;\n      this.setState({\n        allMemeImages: memes\n      });\n    });\n  }\n\n  changeHandler(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  submitHandler(event) {\n    event.preventDefault();\n    const randNum = Math.floor(Math.random() * this.state.allMemeImages.length);\n    const randMemeImg = this.state.allMemeImages[randNum].url;\n    this.setState({\n      randomImage: randMemeImg\n    });\n  }\n\n  downloadMeme() {\n    htmlToImage.toBlob(document.getElementById('memeImg')).then(function (blob) {\n      FileSaver.saveAs(blob, 'memeImg.png');\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"meme-form\",\n        onSubmit: this.submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"topText\",\n          placeholder: \"Top Text\",\n          value: this.state.topText,\n          onChange: this.changeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"bottomText\",\n          placeholder: \"Bottom Text\",\n          value: this.state.bottomText,\n          onChange: this.changeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Generate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"downloadSection\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"btnDownloadMeme\",\n          onClick: this.downloadMeme,\n          children: \"Download Meme\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meme\",\n        id: \"memeImg\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: this.state.randomImage,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"top\",\n          children: this.state.topText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"bottom\",\n          children: this.state.bottomText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MemeGenerator;","map":{"version":3,"names":["React","htmlToImage","FileSaver","MemeGenerator","Component","constructor","state","topText","bottomText","randomImage","allMemeImages","changeHandler","bind","submitHandler","componentDidMount","fetch","then","response","json","memes","data","setState","event","name","value","target","preventDefault","randNum","Math","floor","random","length","randMemeImg","url","downloadMeme","toBlob","document","getElementById","blob","saveAs","render"],"sources":["C:/Users/yania/OneDrive/Desktop/Septimo Semestre/Ingeniria Web/react-app/src/MemeGenerator.js"],"sourcesContent":["import React from 'react';\r\nimport './style.css';\r\nimport * as htmlToImage from 'html-to-image';\r\nimport FileSaver from 'file-saver';\r\n\r\nclass MemeGenerator extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            topText : \"\",\r\n            bottomText : \"\",\r\n            randomImage : \"https://i.imgflip.com/1bij.jpg\",\r\n            allMemeImages : []\r\n        }\r\n        this.changeHandler = this.changeHandler.bind(this);\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"https://api.imgflip.com/get_memes\")\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            const {memes} = response.data\r\n            this.setState({\r\n                allMemeImages: memes\r\n            })\r\n        });\r\n    }\r\n\r\n    changeHandler(event) {\r\n        const {name, value} = event.target;\r\n        this.setState({\r\n            [name] : value\r\n        })\r\n    }\r\n    submitHandler(event) {\r\n        event.preventDefault();\r\n        const randNum = Math.floor(Math.random() * this.state.allMemeImages.length);\r\n        const randMemeImg = this.state.allMemeImages[randNum].url;\r\n        this.setState({ randomImage: randMemeImg });\r\n    }\r\n    downloadMeme() {\r\n        htmlToImage.toBlob(document.getElementById('memeImg'))\r\n        .then(function (blob) {\r\n            FileSaver.saveAs(blob, 'memeImg.png');\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form className=\"meme-form\" onSubmit={this.submitHandler}>\r\n                    <input type=\"text\" name=\"topText\" placeholder=\"Top Text\" value={this.state.topText} onChange={this.changeHandler} />\r\n                    <input type=\"text\" name=\"bottomText\" placeholder=\"Bottom Text\" value={this.state.bottomText} onChange={this.changeHandler} />   \r\n                    <button>Generate</button>\r\n                </form>\r\n                <div id=\"downloadSection\">\r\n                    <button id=\"btnDownloadMeme\" onClick={this.downloadMeme}>Download Meme</button>\r\n                </div>\r\n                <div className=\"meme\" id=\"memeImg\">\r\n                    <img src={this.state.randomImage} alt=\"\" />\r\n                    <h2 className=\"top\">{this.state.topText}</h2>\r\n                    <h2 className=\"bottom\">{this.state.bottomText}</h2>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default MemeGenerator;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,OAAO,KAAKC,WAAZ,MAA6B,eAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,aAAN,SAA4BH,KAAK,CAACI,SAAlC,CAA4C;EACxCC,WAAW,GAAG;IACV;IACA,KAAKC,KAAL,GAAa;MACTC,OAAO,EAAG,EADD;MAETC,UAAU,EAAG,EAFJ;MAGTC,WAAW,EAAG,gCAHL;MAITC,aAAa,EAAG;IAJP,CAAb;IAMA,KAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;IACA,KAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBD,IAAnB,CAAwB,IAAxB,CAArB;EACH;;EAEDE,iBAAiB,GAAG;IAChBC,KAAK,CAAC,mCAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMC,QAAQ,IAAI;MACd,MAAM;QAACE;MAAD,IAAUF,QAAQ,CAACG,IAAzB;MACA,KAAKC,QAAL,CAAc;QACVX,aAAa,EAAES;MADL,CAAd;IAGH,CAPD;EAQH;;EAEDR,aAAa,CAACW,KAAD,EAAQ;IACjB,MAAM;MAACC,IAAD;MAAOC;IAAP,IAAgBF,KAAK,CAACG,MAA5B;IACA,KAAKJ,QAAL,CAAc;MACV,CAACE,IAAD,GAASC;IADC,CAAd;EAGH;;EACDX,aAAa,CAACS,KAAD,EAAQ;IACjBA,KAAK,CAACI,cAAN;IACA,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAAKxB,KAAL,CAAWI,aAAX,CAAyBqB,MAApD,CAAhB;IACA,MAAMC,WAAW,GAAG,KAAK1B,KAAL,CAAWI,aAAX,CAAyBiB,OAAzB,EAAkCM,GAAtD;IACA,KAAKZ,QAAL,CAAc;MAAEZ,WAAW,EAAEuB;IAAf,CAAd;EACH;;EACDE,YAAY,GAAG;IACXjC,WAAW,CAACkC,MAAZ,CAAmBC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAnB,EACCrB,IADD,CACM,UAAUsB,IAAV,EAAgB;MAClBpC,SAAS,CAACqC,MAAV,CAAiBD,IAAjB,EAAuB,aAAvB;IACH,CAHD;EAIH;;EACDE,MAAM,GAAG;IACL,oBACI;MAAA,wBACI;QAAM,SAAS,EAAC,WAAhB;QAA4B,QAAQ,EAAE,KAAK3B,aAA3C;QAAA,wBACI;UAAO,IAAI,EAAC,MAAZ;UAAmB,IAAI,EAAC,SAAxB;UAAkC,WAAW,EAAC,UAA9C;UAAyD,KAAK,EAAE,KAAKP,KAAL,CAAWC,OAA3E;UAAoF,QAAQ,EAAE,KAAKI;QAAnG;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAO,IAAI,EAAC,MAAZ;UAAmB,IAAI,EAAC,YAAxB;UAAqC,WAAW,EAAC,aAAjD;UAA+D,KAAK,EAAE,KAAKL,KAAL,CAAWE,UAAjF;UAA6F,QAAQ,EAAE,KAAKG;QAA5G;UAAA;UAAA;UAAA;QAAA,QAFJ,eAGI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAHJ;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAMI;QAAK,EAAE,EAAC,iBAAR;QAAA,uBACI;UAAQ,EAAE,EAAC,iBAAX;UAA6B,OAAO,EAAE,KAAKuB,YAA3C;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QANJ,eASI;QAAK,SAAS,EAAC,MAAf;QAAsB,EAAE,EAAC,SAAzB;QAAA,wBACI;UAAK,GAAG,EAAE,KAAK5B,KAAL,CAAWG,WAArB;UAAkC,GAAG,EAAC;QAAtC;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAI,SAAS,EAAC,KAAd;UAAA,UAAqB,KAAKH,KAAL,CAAWC;QAAhC;UAAA;UAAA;UAAA;QAAA,QAFJ,eAGI;UAAI,SAAS,EAAC,QAAd;UAAA,UAAwB,KAAKD,KAAL,CAAWE;QAAnC;UAAA;UAAA;UAAA;QAAA,QAHJ;MAAA;QAAA;QAAA;QAAA;MAAA,QATJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAiBH;;AA5DuC;;AA+D5C,eAAeL,aAAf"},"metadata":{},"sourceType":"module"}